[{"/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/index.js":"1","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/App.js":"2","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/FishPage.js":"3","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/Header.js":"4","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/NewFishForm.js":"5","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/Search.js":"6","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/FishList.js":"7","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/FishCard.js":"8","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/FishInfo.js":"9"},{"size":264,"mtime":1676318941447,"results":"10","hashOfConfig":"11"},{"size":823,"mtime":1676389688487,"results":"12","hashOfConfig":"11"},{"size":752,"mtime":1676388738467,"results":"13","hashOfConfig":"11"},{"size":209,"mtime":1676305892882,"results":"14","hashOfConfig":"11"},{"size":1059,"mtime":1676320987688,"results":"15","hashOfConfig":"11"},{"size":391,"mtime":1676305892882,"results":"16","hashOfConfig":"11"},{"size":442,"mtime":1676388756219,"results":"17","hashOfConfig":"11"},{"size":989,"mtime":1676389969258,"results":"18","hashOfConfig":"11"},{"size":1564,"mtime":1676401642308,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12adxmm",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/index.js",[],["43","44"],"/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/App.js",["45"],"import React, { useEffect, useState} from \"react\";\nimport Header from \"./Header\";\nimport FishPage from \"./FishPage\";\nimport { Route, Switch } from \"react-router-dom\";\nimport FishInfo from \"./FishInfo\"\nimport FishCard from \"./FishCard\"\n\n\n\nfunction App() {\n  const [fish, setFish] = useState([])\n  const [fishInfo, setFishInfo] = useState({})\n  /* const [i, setFishInfo] = useState([data[i]])\n  function handleClick () {\n    setFishInfo(data[i])\n  }\n*/\n  return (\n    <div className=\"app\">\n      <Header />\n      <Switch>\n      <Route path = \"/info\">\n        <FishInfo fishInfo={fishInfo} fish = {fish}/>\n      </Route>\n      <Route exact path = \"/\">\n      <FishPage setFishInfo={setFishInfo} fish={fish} setFish={setFish}/>\n      </Route>\n      <FishCard></FishCard>\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/FishPage.js",["46"],"import React, { useEffect, useState } from \"react\";\nimport NewFishForm from \"./NewFishForm\";\nimport FishList from \"./FishList\";\nimport Search from \"./Search\";\n\nfunction FishPage({setFishInfo, fish, setFish}) {\n  const [search, setSearch] = useState('')\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  useEffect(() => {\n    fetch('http://localhost:6001/fish')\n    .then(resp => resp.json())\n    .then(setFish)\n    .then(setIsLoaded(true))\n  }, [])\n\n if(!isLoaded){\n  return <h1>Loading...</h1>\n }\n  return (\n    <main>\n      <NewFishForm setFish={setFish} />\n      <Search search={search} setSearch={setSearch}/>\n      <FishList setFishInfo={setFishInfo} setFish={setFish} search={search} fish={fish}/>\n    </main>\n  );\n}\n\nexport default FishPage;\n","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/Header.js",[],"/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/NewFishForm.js",[],"/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/Search.js",[],"/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/FishList.js",[],"/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/FishCard.js",["47","48"],"import React, { useState } from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction FishCard({setFishInfo, fish, setFish}) {\n  \n  const [showInfo, setShowInfo] = useState({})\n\n\n  let history = useHistory()\n  // let newArr = {}\n  function fishInfo(e){\n  history.push('/info')\n  console.log(e.target)\n  fetch(`http://localhost:6001/fish/`)\n  .then(response => response.json())\n  .then(data => {\n    for(let i=0; i < data.length; i++) {\n       if(data[i][\"Species Illustration Photo\"].src === e.target.src){\n        setFishInfo(data[i])\n        console.log(data[i])\n       }\n       else{\n        console.log(\"doesn't work\")\n       }\n    }\n  }\n    \n  )\n}\n// console.log(newArr)\n  return (\n    <li className=\"card\" onClick = {fishInfo}>\n      <img src={fish[\"Species Illustration Photo\"].src} alt={fish.name} \n        ></img>\n      <h4>{fish[\"Species Name\"]}</h4>\n      <br></br>\n      <p><b>Availability</b>{fish.Availability}</p> \n    \n    </li>\n  );\n}\n\nexport default FishCard;\n\n","/Users/zackh/Development/code/phase-2/Phase2-Group-Project/src/components/FishInfo.js",["49","50"],"import React from \"react\";\nimport FishCard from \"./FishList\"\nimport { useParams } from \"react-router-dom\";\n\n\nfunction FishInfo({fishInfo, setFish, fish, search}) {\n/* display these json keys in these sections: \n- Health Facts Section: calories, carbohydrate, cholesterol, fat, protein, sodium //\n- \"In the Wild\" Facts Section: habitat, location, biology, physical description //\n- Fishing Facts Section: population status, fishing rate, habitat impact, harvest type \n\n*/\nreturn(\n   <div>\n   <section id = \"healthFacts\">\n      <h1>Health Facts:</h1>\n         <p>Calories: {fishInfo.Calories}</p>\n         <p>Carbohydrate: {fishInfo.Carbohydrate}</p>\n         <p>Cholesterol: {fishInfo.Cholesterol}</p>\n         <p>Fat: {fishInfo.[`Fat, Total`]}</p>\n         <p>Protein: {fishInfo.Protein}</p>\n         <p>Sodium: {fishInfo.Sodium}</p>\n      \n   </section>\n   <section id = \"inTheWildFacts\">\n      <h1>In The Wild:</h1>\n         <p>Habitat: {fishInfo.Habitat}</p>\n         <p>Location {fishInfo.Location}</p>\n         <p>Biology: {fishInfo.Biology}</p>\n         <p>Fat: {fishInfo.[`Fat, Total`]}</p>\n         <p>Physical Description: {fishInfo.[`Physical Description`]}</p>\n      \n   </section>\n   <section id = \"fishingFacts\">\n      <h1>Fishing Facts</h1>\n         <p>WAIT: {fishInfo.[`Population Status`]}</p>\n         <p>Fishing Rate: {fishInfo.[`Fishing Rate`]}</p>\n         <p>Habitat Vulnurabilites: {fishInfo.[`Habitat Impacts`]}</p>\n         <p>Harvest Type: {fishInfo.[`Harvest Type`]}</p>\n       \n      \n   </section>\n</div>\n)\n\n}\n\nexport default FishInfo;\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":15,"column":6,"nodeType":"61","endLine":15,"endColumn":8,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"63","line":6,"column":10,"nodeType":"57","messageId":"58","endLine":6,"endColumn":18},{"ruleId":"55","severity":1,"message":"64","line":6,"column":20,"nodeType":"57","messageId":"58","endLine":6,"endColumn":31},{"ruleId":"55","severity":1,"message":"65","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"66","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":19},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFish'. Either include it or remove the dependency array.","ArrayExpression",["69"],"'showInfo' is assigned a value but never used.","'setShowInfo' is assigned a value but never used.","'FishCard' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [setFish]",{"range":"72","text":"73"},[448,450],"[setFish]"]