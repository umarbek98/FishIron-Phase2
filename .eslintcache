[{"/home/asia/Development/code/projects/Phase2-Group-Project/src/index.js":"1","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/App.js":"2","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/FishPage.js":"3","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/Header.js":"4","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/FishInfo.js":"5","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/FishCard.js":"6","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/NewFishForm.js":"7","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/FishList.js":"8","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/Search.js":"9"},{"size":307,"mtime":1676493937436,"results":"10","hashOfConfig":"11"},{"size":822,"mtime":1676488141197,"results":"12","hashOfConfig":"11"},{"size":712,"mtime":1676488141197,"results":"13","hashOfConfig":"11"},{"size":435,"mtime":1676487858077,"results":"14","hashOfConfig":"11"},{"size":1232,"mtime":1676572860540,"results":"15","hashOfConfig":"11"},{"size":564,"mtime":1676488141197,"results":"16","hashOfConfig":"11"},{"size":3865,"mtime":1676488141197,"results":"17","hashOfConfig":"11"},{"size":516,"mtime":1676488141197,"results":"18","hashOfConfig":"11"},{"size":391,"mtime":1676487858077,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"a9z0c0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/asia/Development/code/projects/Phase2-Group-Project/src/index.js",[],["43","44"],"/home/asia/Development/code/projects/Phase2-Group-Project/src/components/App.js",[],"/home/asia/Development/code/projects/Phase2-Group-Project/src/components/FishPage.js",["45","46"],"import React, { useEffect, useState } from \"react\";\nimport NewFishForm from \"./NewFishForm\";\nimport FishList from \"./FishList\";\nimport Search from \"./Search\";\n\nfunction FishPage({setFishInfo, fish, setFish}) {\n  const [search, setSearch] = useState('')\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  useEffect(() => {\n    fetch('http://localhost:6001/fish')\n    .then(resp => resp.json())\n    .then(setFish)\n    .then(setIsLoaded(true))\n  }, [])\n\n if(!isLoaded){\n  return <h1>Loading...</h1>\n }\n  return (\n    <main>\n      <Search search={search} setSearch={setSearch}/>\n      <FishList setFishInfo={setFishInfo} setFish={setFish} search={search} fish={fish}/>\n    </main>\n  );\n}\n\nexport default FishPage;\n","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/Header.js",[],"/home/asia/Development/code/projects/Phase2-Group-Project/src/components/FishInfo.js",[],"/home/asia/Development/code/projects/Phase2-Group-Project/src/components/FishCard.js",["47"],"import React, { useState } from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction FishCard({setFishInfo, fish}) {\n  \n  let history = useHistory()\n  function fishInfo(e){\n    console.log(e.target)\n    setFishInfo(fish)\n    history.push('/info')\n\n}\n\n  return (\n    <li className=\"card\" onClick = {fishInfo}>\n      <img src={fish[\"Species Illustration Photo\"].src} alt={fish.name} \n        ></img>\n      <h4>{fish[\"Species Name\"]}</h4>\n      <br></br>\n      <p><b>Availability</b>{fish.Availability}</p> \n    \n    </li>\n  );\n}\n\nexport default FishCard;\n","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/NewFishForm.js",["48"],"import React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\n\nfunction NewFishForm({setFish}) {\n  const [formData, setFormData] = useState('')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({...formData, [name]: value });\n  };\n\n  function handleFishSubmit(e){\n    e.preventDefault()\n    const newFishData = {\n      \"id\": uuid(),\n      \"Species Name\": e.target.name.value,\n      \"Calories\": e.target.calories.value,\n      \"Protein\": e.target.protein.value,\n      \"Color\": e.target.color.value,\n      \"Cholesterol\": e.target.cholesterol.value,\n      \"Carbohydrate\": e.target.carbohydrate.value,\n      \"Fat, Total\": e.target.fat.value,\n      \"Sodium\": e.target.sodium.value,\n      \"Population Status\": e.target.population.target,\n      \"Fishing Rate\": e.target.rate.value,\n      \"Habitat Impacts\": e.target.impact.value,\n      \"Harvest Type\": e.target.type.value,\n      \"Species Illustration Photo\":{\n        src: e.target.image.value\n      }\n    }\n\n    fetch('http://localhost:6001/fish', {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json'\n      },\n      body: JSON.stringify(newFishData)\n    })\n    .then(resp => resp.json())\n    .catch(error => console.log(error))\n\n    setFish(prevValue => [...prevValue, newFishData])\n  }\n  return (\n    <div className=\"new-fish-form\">\n      <h2>New Fish Info</h2>\n      <form onSubmit={handleFishSubmit}>\n        <input onChange={handleChange} value={formData.name} type=\"text\"  name=\"name\" placeholder=\"Fish Name\" />\n        <input onChange={handleChange} value={formData.color} type=\"text\"  name=\"color\" placeholder=\"Fish Color\" />\n        <input onChange={handleChange} value={formData.calories} type=\"text\"  name=\"calories\" placeholder=\"Fish Calories\" />\n        <input onChange={handleChange} value={formData.protein} type=\"text\"  name=\"protein\" placeholder=\"Fish Protein\" />\n        <input onChange={handleChange} value={formData.cholesterol} type=\"text\"  name=\"cholesterol\" placeholder=\"Fish Cholesterol\" />\n        <input onChange={handleChange} value={formData.carbohydrate} type=\"text\"  name=\"carbohydrate\" placeholder=\"Fish Carbohydrate\" />\n        <input onChange={handleChange} value={formData.fat} type=\"text\"  name=\"fat\" placeholder=\"Fish Total Fat\" />\n        <input onChange={handleChange} value={formData.sodium} type=\"text\"  name=\"sodium\" placeholder=\"Fish Soidium\" />\n        <input onChange={handleChange} value={formData.image} type=\"text\"  name=\"image\" placeholder=\"Image URL\" />\n        <h1>Fish Facts</h1> \n        <input onChange={handleChange} value={formData.population} type=\"text\"  name=\"population\" placeholder=\"Fish Population\" />\n        <input onChange={handleChange} value={formData.rate} type=\"text\"  name=\"rate\" placeholder=\"Fishing Rate\" />\n        <input onChange={handleChange} value={formData.impact} type=\"text\"  name=\"impact\" placeholder=\"Fishing Rate\" />\n        <input onChange={handleChange} value={formData.type} type=\"text\"  name=\"type\" placeholder=\"Fishing Rate\" />\n        <button style={{backgroundColor: 'rgb(104, 240, 222)', color: 'black'}} type=\"submit\">Add Fish</button>\n      </form>\n      {formData.name ? <h1>Name: {formData.name}</h1> : null}\n      {formData.color ? <h2>Color: <b style={{color: `${formData.color}`}}>{formData.color}</b></h2> : null}\n      {formData.calories ? <h2>Calories: {formData.calories}</h2>: null}\n      {formData.protein ? <h2>Protien: {formData.protein} g</h2> : null }\n      {formData.cholesterol ? <h2>Cholesterol: {formData.cholesterol} mg</h2>: null}\n      {formData.carbohydrate ? <h2>Carbohydrate: {formData.carbohydrate} g</h2>: null}\n      {formData.fat ? <h2>Fat: {formData.fat} g</h2> : null }\n      {formData.sodium ? <h2>Sodium: {formData.sodium} mg</h2>: null}\n      <img src={formData.image}/>\n    </div>\n  );\n}\n\nexport default NewFishForm;\n","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/FishList.js",["49"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport FishCard from \"./FishCard\";\n\n\nfunction FishList({setFishInfo, setFish, fish, search,}) {\n\n\n  return (\n   <div>\n    <ul className=\"cards\">{fish.filter(fish => fish[\"Species Name\"].toLowerCase().includes(search.toLowerCase()))\n      .map(fish => <FishCard \n      key={fish.id}\n      fish={fish}\n      setFish={setFish}\n      setFishInfo={setFishInfo}\n      />)}</ul>\n      </div>\n  );\n}\n\nexport default FishList;","/home/asia/Development/code/projects/Phase2-Group-Project/src/components/Search.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":15,"column":6,"nodeType":"60","endLine":15,"endColumn":8,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":73,"column":7,"nodeType":"65","endLine":73,"endColumn":34},{"ruleId":"54","severity":1,"message":"66","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":20},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'NewFishForm' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFish'. Either include it or remove the dependency array.","ArrayExpression",["69"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [setFish]",{"range":"72","text":"73"},[448,450],"[setFish]"]