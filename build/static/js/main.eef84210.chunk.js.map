{"version":3,"sources":["components/Header.js","components/NewFishForm.js","components/FishCard.js","components/FishList.js","components/Search.js","components/FishPage.js","components/FishInfo.js","components/App.js","index.js"],"names":["Header","className","to","role","NewFishForm","setFish","useState","formData","setFormData","handleChange","e","target","name","value","onSubmit","preventDefault","newFishData","uuid","calories","protein","color","cholesterol","carbohydrate","fat","sodium","population","rate","impact","availability","type","src","image","fetch","method","headers","body","JSON","stringify","then","resp","json","catch","error","console","log","prevValue","onChange","placeholder","style","backgroundColor","FishCard","setFishInfo","fish","history","useHistory","onClick","push","alt","Availability","FishList","search","filter","toLowerCase","includes","map","id","Search","setSearch","htmlFor","FishPage","isLoaded","setIsLoaded","useEffect","FishInfo","fishInfo","Calories","Carbohydrate","Cholesterol","Protein","Sodium","Biology","Habitat","Location","Population","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eef84210.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <Link className='headerLink' to='/'>\n        FishIron <b>//</b>\n        <span role=\"img\">\n        üêü\n        </span>\n        </Link>\n      </h1>\n      <NavLink className=\"new-button\" to='/newfishfrom' >Add More Fish\n        </NavLink>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\n\nfunction NewFishForm({setFish}) {\n  const [formData, setFormData] = useState('')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({...formData, [name]: value });\n  };\n\n  function handleFishSubmit(e){\n    e.preventDefault()\n    const newFishData = {\n      \"id\": uuid(),\n      \"Species Name\": e.target.name.value,\n      \"Calories\": e.target.calories.value,\n      \"Protein\": e.target.protein.value,\n      \"Color\": e.target.color.value,\n      \"Cholesterol\": e.target.cholesterol.value,\n      \"Carbohydrate\": e.target.carbohydrate.value,\n      \"Fat, Total\": e.target.fat.value,\n      \"Sodium\": e.target.sodium.value,\n      \"Population\": e.target.population.target,\n      \"Fishing Rate\": e.target.rate.value,\n      \"Habitat Impacts\": e.target.impact.value,\n      \"Availability\": e.target.availability.value,\n      \"Harvest Type\": e.target.type.value,\n      \"Species Illustration Photo\":{\n        src: e.target.image.value\n      }\n    }\n\n    fetch('http://localhost:6001/fish', {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json'\n      },\n      body: JSON.stringify(newFishData)\n    })\n    .then(resp => resp.json())\n    .catch(error => console.log(error))\n\n    setFish(prevValue => [...prevValue, newFishData])\n  }\n  return (\n    <div className=\"new-fish-form\">\n      <h2>New Fish Info</h2>\n      <form onSubmit={handleFishSubmit}>\n        <input onChange={handleChange} value={formData.name} type=\"text\"  name=\"name\" placeholder=\"Fish Name\" />\n        <input onChange={handleChange} value={formData.color} type=\"text\"  name=\"color\" placeholder=\"Fish Color\" />\n        <input onChange={handleChange} value={formData.calories} type=\"text\"  name=\"calories\" placeholder=\"Fish Calories\" />\n        <input onChange={handleChange} value={formData.protein} type=\"text\"  name=\"protein\" placeholder=\"Fish Protein\" />\n        <input onChange={handleChange} value={formData.cholesterol} type=\"text\"  name=\"cholesterol\" placeholder=\"Fish Cholesterol\" />\n        <input onChange={handleChange} value={formData.carbohydrate} type=\"text\"  name=\"carbohydrate\" placeholder=\"Fish Carbohydrate\" />\n        <input onChange={handleChange} value={formData.fat} type=\"text\"  name=\"fat\" placeholder=\"Fish Total Fat\" />\n        <input onChange={handleChange} value={formData.sodium} type=\"text\"  name=\"sodium\" placeholder=\"Fish Soidium\" />\n        <input onChange={handleChange} value={formData.availability} type=\"text\"  name=\"availability\" placeholder=\"Fish Availability\" />\n        <input onChange={handleChange} value={formData.image} type=\"text\"  name=\"image\" placeholder=\"Image URL\" />\n        <h1>Fish Facts</h1> \n        <input onChange={handleChange} value={formData.population} type=\"text\"  name=\"population\" placeholder=\"Fish Population\" />\n        <input onChange={handleChange} value={formData.rate} type=\"text\"  name=\"rate\" placeholder=\"Fishing Rate\" />\n        <input onChange={handleChange} value={formData.impact} type=\"text\"  name=\"impact\" placeholder=\"Fish Impact\" />\n        <input onChange={handleChange} value={formData.type} type=\"text\"  name=\"type\" placeholder=\"Fish Type\" />\n        <button style={{backgroundColor: 'rgb(104, 240, 222)', color: 'black'}} type=\"submit\">Add Fish</button>\n      </form>\n      {formData.name ? <h1>Name: {formData.name}</h1> : null}\n      {formData.color ? <h2>Color: <b style={{color: `${formData.color}`}}>{formData.color}</b></h2> : null}\n      {formData.calories ? <h2>Calories: {formData.calories}</h2>: null}\n      {formData.protein ? <h2>Protien: {formData.protein} g</h2> : null }\n      {formData.cholesterol ? <h2>Cholesterol: {formData.cholesterol} mg</h2>: null}\n      {formData.carbohydrate ? <h2>Carbohydrate: {formData.carbohydrate} g</h2>: null}\n      {formData.fat ? <h2>Fat: {formData.fat} g</h2> : null }\n      {formData.sodium ? <h2>Sodium: {formData.sodium} mg</h2>: null}\n      <img src={formData.image}/>\n    </div>\n  );\n}\n\nexport default NewFishForm;\n","import React, { useState } from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction FishCard({setFishInfo, fish}) {\n  \n  let history = useHistory()\n  function fishInfo(e){\n    console.log(e.target)\n    setFishInfo(fish)\n    history.push('/info')\n\n}\n\n  return (\n    <li className=\"card\" onClick = {fishInfo}>\n      <img src={fish[\"Species Illustration Photo\"].src} alt={fish.name} \n        ></img>\n      <h4>{fish[\"Species Name\"]}</h4>\n      <br></br>\n      <p><b>Availability</b>{fish.Availability}</p> \n    \n    </li>\n  );\n}\n\nexport default FishCard;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport FishCard from \"./FishCard\";\n\n\nfunction FishList({setFishInfo, setFish, fish, search,}) {\n\n\n  return (\n   <div>\n    <ul className=\"cards\">{fish.filter(fish => fish[\"Species Name\"].toLowerCase().includes(search.toLowerCase()))\n      .map(fish => <FishCard \n      key={fish.id}\n      fish={fish}\n      setFish={setFish}\n      setFishInfo={setFishInfo}\n      />)}</ul>\n      </div>\n  );\n}\n\nexport default FishList;","import React from \"react\";\n\nfunction Search({search, setSearch}) {\n  return (\n    <div className=\"searchbar\">\n      <label htmlFor=\"search\">Search For Fish:</label>\n      <input\n        type=\"text\"\n        id=\"search\"\n        placeholder=\"Type a name to search...\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport NewFishForm from \"./NewFishForm\";\nimport FishList from \"./FishList\";\nimport Search from \"./Search\";\n\nfunction FishPage({setFishInfo, fish, setFish}) {\n  const [search, setSearch] = useState('')\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  useEffect(() => {\n    fetch('http://localhost:6001/fish')\n    .then(resp => resp.json())\n    .then(setFish)\n    .then(setIsLoaded(true))\n  }, [])\n\n if(!isLoaded){\n  return <h1>Loading...</h1>\n }\n  return (\n    <main>\n      <Search search={search} setSearch={setSearch}/>\n      <FishList setFishInfo={setFishInfo} setFish={setFish} search={search} fish={fish}/>\n    </main>\n  );\n}\n\nexport default FishPage;\n","import React from \"react\";\n\n\nfunction FishInfo({fishInfo}) {\n\nreturn(\n   <div>\n      <img className=\"infoImg\" src={fishInfo[\"Species Illustration Photo\"].src} alt={fishInfo.name} \n        ></img>\n      <div className=\"infoContainer\">\n         <section id = \"healthFacts\">\n            <h1>Health Facts:</h1>\n               <p><b>Calories:</b> {fishInfo.Calories}</p>\n               <br/>\n               <p><b>Carbohydrate:</b> {fishInfo.Carbohydrate}</p>\n               <br/>\n               <p><b>Cholesterol:</b> {fishInfo.Cholesterol}</p>\n               <br/>\n               <p><b>Fat:</b> {fishInfo[`Fat, Total`]}</p>\n               <br/>\n               <p><b>Protein:</b> {fishInfo.Protein}</p>\n               <br/>\n               <p><b>Sodium:</b> {fishInfo.Sodium}</p>\n            \n         </section>\n         {fishInfo.Biology || fishInfo.Habitat || fishInfo.Location ? <section id = \"inTheWildFacts\">\n            <h1>In The Wild:</h1>\n               <p><b>Habitat:</b> {fishInfo.Habitat}</p>\n               <br/>\n               <p><b>Location:</b> {fishInfo.Location}</p>\n               <br/>\n               <p><b>Biology:</b> {fishInfo.Biology}</p>\n               <br/>\n               <p><b>Physical Description:</b> {fishInfo[`Physical Description`]}</p>\n            \n         </section> : null}\n         <section id = \"fishingFacts\">\n            <h1>Fishing Facts</h1>\n               <p><b>Population:</b> {fishInfo.Population}</p>\n               <br/>\n               <p><b>Fishing Rate:</b> {fishInfo[`Fishing Rate`]}</p>\n               <br/>\n               <p><b>Habitat Vulnurabilites:</b> {fishInfo[`Habitat Impacts`]}</p>\n               <br/>\n               <p><b>Harvest Type:</b> {fishInfo[`Harvest Type`]}</p>\n            \n            \n         </section>\n      </div>\n</div>\n)\n\n}\n\nexport default FishInfo;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport FishPage from \"./FishPage\";\nimport { Route, Switch } from \"react-router-dom\";\nimport FishInfo from \"./FishInfo\"\nimport FishCard from \"./FishCard\"\nimport NewFishForm from \"./NewFishForm\";\n\n\n\nfunction App() {\n  const [fish, setFish] = useState([])\n  const [fishInfo, setFishInfo] = useState({})\n  const [showForm, setShowForm] = useState([true])\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Switch>\n      <Route path = \"/info\">\n        <FishInfo fishInfo={fishInfo}/>\n      </Route>\n      <Route path = \"/newfishfrom\">\n      <NewFishForm setFish={setFish} />\n      </Route>\n      <Route exact path = \"/\">\n      <FishPage setFishInfo={setFishInfo} fish={fish} setFish={setFish}/>\n      </Route>\n      <FishCard></FishCard>\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, \ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}