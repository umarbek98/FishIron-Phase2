{"ast":null,"code":"/**\nA function that returns a universally unique identifier (uuid).  \nexample: 1b83fd69-abe7-468c-bea1-306a8aa1c81d\n@returns `string` : 32 character uuid (see example)\n*/\nfunction uuid() {\n  const hashTable = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n  let uuid = [];\n\n  for (let i = 0; i < 36; i++) {\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\n      uuid[i] = \"-\";\n    } else {\n      uuid[i] = hashTable[Math.ceil(Math.random() * hashTable.length - 1)];\n    }\n  }\n\n  return uuid.join(\"\");\n}\n\nmodule.exports = uuid;","map":{"version":3,"sources":["/home/umarbek98/Development/code/phase-2/phase-2-group-project/node_modules/react-uuid/uuid.js"],"names":["uuid","hashTable","i","Math","ceil","random","length","join","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,GAAgB;AACf,QAAMC,SAAS,GAAG,CACjB,GADiB,EAEjB,GAFiB,EAGjB,GAHiB,EAIjB,GAJiB,EAKjB,GALiB,EAMjB,GANiB,EAOjB,GAPiB,EAQjB,GARiB,EASjB,GATiB,EAUjB,GAViB,EAWjB,GAXiB,EAYjB,GAZiB,EAajB,GAbiB,EAcjB,GAdiB,EAejB,GAfiB,EAgBjB,GAhBiB,CAAlB;AAkBA,MAAID,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC5B,QAAIA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,EAAjB,IAAuBA,CAAC,KAAK,EAA7B,IAAmCA,CAAC,KAAK,EAA7C,EAAiD;AAChDF,MAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,GAAV;AACA,KAFD,MAEO;AACNF,MAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUD,SAAS,CAACE,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgBJ,SAAS,CAACK,MAA1B,GAAmC,CAA7C,CAAD,CAAnB;AACA;AACD;;AACD,SAAON,IAAI,CAACO,IAAL,CAAU,EAAV,CAAP;AACA;;AAEDC,MAAM,CAACC,OAAP,GAAiBT,IAAjB","sourcesContent":["/**\nA function that returns a universally unique identifier (uuid).  \nexample: 1b83fd69-abe7-468c-bea1-306a8aa1c81d\n@returns `string` : 32 character uuid (see example)\n*/\nfunction uuid() {\n\tconst hashTable = [\n\t\t\"a\",\n\t\t\"b\",\n\t\t\"c\",\n\t\t\"d\",\n\t\t\"e\",\n\t\t\"f\",\n\t\t\"0\",\n\t\t\"1\",\n\t\t\"2\",\n\t\t\"3\",\n\t\t\"4\",\n\t\t\"5\",\n\t\t\"6\",\n\t\t\"7\",\n\t\t\"8\",\n\t\t\"9\",\n\t];\n\tlet uuid = [];\n\tfor (let i = 0; i < 36; i++) {\n\t\tif (i === 8 || i === 13 || i === 18 || i === 23) {\n\t\t\tuuid[i] = \"-\";\n\t\t} else {\n\t\t\tuuid[i] = hashTable[Math.ceil(Math.random() * hashTable.length - 1)];\n\t\t}\n\t}\n\treturn uuid.join(\"\");\n}\n\nmodule.exports = uuid;\n"]},"metadata":{},"sourceType":"script"}